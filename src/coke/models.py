from sqlalchemy import Column, Integer, Text, Identity, VARCHAR, PrimaryKeyConstraint, CheckConstraint, UniqueConstraint
from sqlalchemy.dialects.postgresql import JSONB

from coke.db import Base


class Asset(Base):
    __tablename__ = 'asset'
    __table_args__ = (
        UniqueConstraint("fid", name=f"uq_{__tablename__}_fid"),
        {'comment': 'All assets'}
    )

    id = Column("id", Integer, Identity(), primary_key=True, comment="ID")
    fid = Column("fid", Text, nullable=False, comment='Feature ID')
    label = Column("label", Text, nullable=False, comment='Label')
    platform_type = Column("platform_type", Text, nullable=False, comment='Platform type')
    identifiers = Column("identifiers", JSONB(astext_type=None), comment="Identifiers")

    def __repr__(self):
        return f"<Asset ({self.id}) [{self.fid}] '{self.label}' {self.platform_type}>"


class PostGISSpatialRefSys(Base):
    """
    Utility table generated by the PostGIS extension.

    Needed for the DDL migration test to pass. It is never used from within code and can be safely ignored.
    """
    __tablename__ = 'spatial_ref_sys'
    __table_args__ = (
        PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey'),
        CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    )

    srid = Column('srid', Integer, autoincrement=False, nullable=False)
    auth_name = Column('auth_name', VARCHAR(length=256), autoincrement=False, nullable=True)
    auth_srid = Column('auth_srid', Integer, autoincrement=False, nullable=True)
    srtext = Column('srtext', VARCHAR(length=2048), autoincrement=False, nullable=True)
    proj4text = Column('proj4text', VARCHAR(length=2048), autoincrement=False, nullable=True)
